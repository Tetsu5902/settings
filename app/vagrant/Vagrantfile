# -*- mode: ruby -*-
# vi: set ft=ruby :

require 'fileutils'

Vagrant.require_version ">= 1.6.0"

# Make sure the vagrant-ignition plugin is installed
required_plugins = %w(vagrant-ignition)

plugins_to_install = required_plugins.select { |plugin| not Vagrant.has_plugin? plugin }
if not plugins_to_install.empty?
  puts "Installing plugins: #{plugins_to_install.join(' ')}"
  if system "vagrant plugin install #{plugins_to_install.join(' ')}"
    exec "vagrant #{ARGV.join(' ')}"
  else
    abort "Installation of one or more plugins has failed. Aborting."
  end
end

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.
  config.ssh.insert_key = false

  config.winnfsd.uid = 1000
  config.winnfsd.gid = 1000
  
  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://vagrantcloud.com/search.
  config.vm.define "ansible-master" do |node|
    node.vm.box = "generic/ubuntu1804"
	node.vm.box_version = "1.6.20"
	node.vm.hostname = "ansible-master"
    node.vm.network :forwarded_port, guest: 22, host: 2001, id: "ssh"
    node.vm.network "private_network", ip: "192.168.33.10"
    
	node.vm.synced_folder "./share", "/share", type: "nfs"

	node.vm.provider "virtualbox" do |vb|
      vb.gui = false
      vb.memory = "512"
    end

    node.vm.provision "shell", path: "provision/setup_master.sh"
  end
  
  config.vm.define "ansible-slave00" do |node|
    node.vm.box = "generic/ubuntu1804"
	node.vm.box_version = "1.6.20"
    node.vm.hostname = "ansible-slave00"
    node.vm.network :forwarded_port, guest: 22, host: 2002, id: "ssh"
    node.vm.network "private_network", ip: "192.168.33.11"
    
	node.vm.provider "virtualbox" do |vb|
      vb.gui = false
      vb.memory = "4096"
    end

    node.vm.provision "shell", path: "provision/setup_slave.sh"
  end

  config.vm.define "ansible-slave10" do |node|
    node.vm.box = "coreos-alpha"
    node.vm.box_url = "https://alpha.release.core-os.net/amd64-usr/current/coreos_production_vagrant_virtualbox.json"
    node.vm.hostname = "ansible-slave10"
    node.vm.network :forwarded_port, guest: 22, host: 2003, id: "ssh"
    node.vm.network "private_network", ip: "192.168.33.21"
    
	node.vm.provider "virtualbox" do |vb|
      vb.check_guest_additions = false
      vb.functional_vboxsf     = false
      vb.gui = false
      vb.memory = "1024"
      vb.cpus = "1"
      vb.customize ["modifyvm", :id, "--cpuexecutioncap", "#{"100"}"]

      #vb.customize ["modifyvm", :id, "--uart1", "0x3F8", "4"]
      #vb.customize ["modifyvm", :id, "--uartmode1", serialFile]
    end

    #node.vm.provision "shell", path: "provision/setup_slave.sh"
  end
  

  
  #config.vm.box = "generic/ubuntu1804"
  #config.vm.box_version = "1.6.20"

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # config.vm.network "forwarded_port", guest: 80, host: 8080
  # config.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1"
  # config.vm.network "public_network"
  #config.vm.network "private_network", ip: "192.168.33.10"


  #config.vm.synced_folder "./share", "/vagrant_data", :mount_options => ["dmode=777","fmode=777"], type: "nfs"
end
